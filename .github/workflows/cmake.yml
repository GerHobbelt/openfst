name: CMake

on:
  push:
    branches: [ "winport" ]
  pull_request:
    branches: [ "winport" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  XX_BUILD_TYPE: Debug

jobs:
  job_matrix:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        build_type: [Release, Debug]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Get Conan
      # You may pin to the exact commit or the version.
      # uses: turtlebrowser/get-conan@368dfd1b36f811723d7db981352dd77cd69c2c9e
      uses: turtlebrowser/get-conan@v1.1
  
    - name: Create default profile
      run: conan profile new default --detect
           
    - name: Install dependencies
      run: conan install . -s build_type=${{matrix.build_type}} --install-folder=${{github.workspace}}/build --build=missing

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}  -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/${{matrix.os}}-${{matrix.build_type}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 4
#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.  
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}
    - name: Install
      run: |
        cmake --version
        cmake --help
        cmake -v --build ${{github.workspace}}/build --target INSTALL 
      
      
